"use client"

import { useState } from "react"
import "bootstrap/dist/css/bootstrap.min.css"

// Tipos de mat√©rias do Ensino M√©dio
const subjectInfo = {
  matematica: {
    name: "Matem√°tica",
    icon: "üìä",
    color: "primary",
    description: "√Ålgebra, geometria, fun√ß√µes e estat√≠stica",
  },
  portugues: {
    name: "Portugu√™s/Literatura",
    icon: "üìö",
    color: "success",
    description: "Gram√°tica, interpreta√ß√£o de texto e literatura brasileira",
  },
  historia: {
    name: "Hist√≥ria",
    icon: "üìñ",
    color: "warning",
    description: "Hist√≥ria do Brasil e mundial",
  },
  geografia: {
    name: "Geografia",
    icon: "üó∫Ô∏è",
    color: "info",
    description: "Geografia f√≠sica, humana e geopol√≠tica",
  },
  fisica: {
    name: "F√≠sica",
    icon: "‚öõÔ∏è",
    color: "secondary",
    description: "Mec√¢nica, termodin√¢mica, eletromagnetismo e f√≠sica moderna",
  },
  quimica: {
    name: "Qu√≠mica",
    icon: "üß™",
    color: "danger",
    description: "Qu√≠mica org√¢nica, inorg√¢nica e f√≠sico-qu√≠mica",
  },
  biologia: {
    name: "Biologia",
    icon: "üß¨",
    color: "success",
    description: "Citologia, gen√©tica, evolu√ß√£o e ecologia",
  },
  filosofia: {
    name: "Filosofia",
    icon: "üí°",
    color: "dark",
    description: "√âtica, pol√≠tica, metaf√≠sica e epistemologia",
  },
  sociologia: {
    name: "Sociologia",
    icon: "üë•",
    color: "warning",
    description: "Cultura, sociedade, trabalho e cidadania",
  },
  ingles: {
    name: "Ingl√™s",
    icon: "üåç",
    color: "primary",
    description: "Gram√°tica, vocabul√°rio e interpreta√ß√£o de texto",
  },
  educacao_fisica: {
    name: "Educa√ß√£o F√≠sica",
    icon: "üèÉ",
    color: "info",
    description: "Esportes, sa√∫de e pr√°ticas corporais",
  },
  artes: {
    name: "Artes",
    icon: "üé®",
    color: "secondary",
    description: "Artes visuais, m√∫sica, dan√ßa e teatro",
  },
}

// Banco de quest√µes para todas as mat√©rias
const questions = [
  // Matem√°tica
  {
    id: 1,
    question: "Qual √© o valor de x na equa√ß√£o 2x + 5 = 15?",
    options: ["4", "5", "6", "7"],
    correctAnswer: 1,
    difficulty: "easy",
    subject: "matematica",
  },
  {
    id: 2,
    question: "Qual √© a √°rea de um c√≠rculo com raio de 3 cm?",
    options: ["6œÄ cm¬≤", "9œÄ cm¬≤", "12œÄ cm¬≤", "18œÄ cm¬≤"],
    correctAnswer: 1,
    difficulty: "medium",
    subject: "matematica",
  },
  {
    id: 3,
    question: "Se log‚ÇÅ‚ÇÄ(x) = 2, qual √© o valor de x?",
    options: ["20", "100", "200", "1000"],
    correctAnswer: 1,
    difficulty: "hard",
    subject: "matematica",
  },

  // Portugu√™s
  {
    id: 4,
    question: "Qual √© o plural de 'cidad√£o'?",
    options: ["cidad√£os", "cidad√µes", "cidad√£es", "cidadans"],
    correctAnswer: 0,
    difficulty: "easy",
    subject: "portugues",
  },
  {
    id: 5,
    question: "Quem escreveu 'Dom Casmurro'?",
    options: ["Jos√© de Alencar", "Machado de Assis", "Clarice Lispector", "Guimar√£es Rosa"],
    correctAnswer: 1,
    difficulty: "medium",
    subject: "portugues",
  },
  {
    id: 6,
    question: "Qual figura de linguagem est√° presente em 'A vida √© uma nuvem que voa'?",
    options: ["Meton√≠mia", "Met√°fora", "Hip√©rbole", "Pleonasmo"],
    correctAnswer: 1,
    difficulty: "hard",
    subject: "portugues",
  },

  // Hist√≥ria
  {
    id: 7,
    question: "Em que ano foi proclamada a Independ√™ncia do Brasil?",
    options: ["1808", "1822", "1889", "1500"],
    correctAnswer: 1,
    difficulty: "easy",
    subject: "historia",
  },
  {
    id: 8,
    question: "Qual foi o per√≠odo da ditadura militar no Brasil?",
    options: ["1945-1964", "1964-1985", "1930-1945", "1985-2000"],
    correctAnswer: 1,
    difficulty: "medium",
    subject: "historia",
  },
  {
    id: 9,
    question: "Qual evento marcou o in√≠cio da Primeira Guerra Mundial?",
    options: [
      "Bombardeio de Pearl Harbor",
      "Queda do Muro de Berlim",
      "Assassinato do arquiduque Francisco Ferdinando",
      "Revolu√ß√£o Russa",
    ],
    correctAnswer: 2,
    difficulty: "hard",
    subject: "historia",
  },

  // Geografia
  {
    id: 10,
    question: "Qual √© a capital do Brasil?",
    options: ["S√£o Paulo", "Rio de Janeiro", "Bras√≠lia", "Salvador"],
    correctAnswer: 2,
    difficulty: "easy",
    subject: "geografia",
  },
  {
    id: 11,
    question: "Qual √© o maior bioma brasileiro em extens√£o territorial?",
    options: ["Mata Atl√¢ntica", "Cerrado", "Amaz√¥nia", "Caatinga"],
    correctAnswer: 2,
    difficulty: "medium",
    subject: "geografia",
  },
  {
    id: 12,
    question: "O que s√£o as placas tect√¥nicas?",
    options: [
      "Forma√ß√µes rochosas superficiais",
      "Fragmentos da litosfera que flutuam sobre o manto",
      "Camadas da atmosfera",
      "Dep√≥sitos sedimentares marinhos",
    ],
    correctAnswer: 1,
    difficulty: "hard",
    subject: "geografia",
  },

  // F√≠sica
  {
    id: 13,
    question: "Qual √© a unidade de medida de for√ßa no Sistema Internacional?",
    options: ["Watt", "Joule", "Newton", "Pascal"],
    correctAnswer: 2,
    difficulty: "easy",
    subject: "fisica",
  },
  {
    id: 14,
    question: "O que afirma a Primeira Lei de Newton?",
    options: [
      "A for√ßa √© igual √† massa vezes acelera√ß√£o",
      "A energia n√£o pode ser criada nem destru√≠da",
      "Um corpo em repouso tende a permanecer em repouso",
      "A toda a√ß√£o corresponde uma rea√ß√£o de igual intensidade",
    ],
    correctAnswer: 2,
    difficulty: "medium",
    subject: "fisica",
  },
  {
    id: 15,
    question: "O que √© o efeito fotoel√©trico?",
    options: [
      "Emiss√£o de luz por um corpo aquecido",
      "Emiss√£o de el√©trons por um material quando exposto √† radia√ß√£o eletromagn√©tica",
      "Reflex√£o da luz em superf√≠cies met√°licas",
      "Produ√ß√£o de eletricidade atrav√©s de c√©lulas solares",
    ],
    correctAnswer: 1,
    difficulty: "hard",
    subject: "fisica",
  },

  // Qu√≠mica
  {
    id: 16,
    question: "Qual √© o s√≠mbolo qu√≠mico do ouro?",
    options: ["O", "Ou", "Au", "Ag"],
    correctAnswer: 2,
    difficulty: "easy",
    subject: "quimica",
  },
  {
    id: 17,
    question: "O que √© um is√≥topo?",
    options: [
      "√Åtomos com mesmo n√∫mero de pr√≥tons e diferentes n√∫meros de n√™utrons",
      "√Åtomos com mesmo n√∫mero de n√™utrons e diferentes n√∫meros de pr√≥tons",
      "√Åtomos com mesmo n√∫mero de el√©trons e diferentes n√∫meros de pr√≥tons",
      "Mol√©culas com mesma f√≥rmula qu√≠mica e diferentes estruturas",
    ],
    correctAnswer: 0,
    difficulty: "medium",
    subject: "quimica",
  },
  {
    id: 18,
    question: "O que √© uma rea√ß√£o de oxirredu√ß√£o?",
    options: [
      "Rea√ß√£o que libera calor",
      "Rea√ß√£o que absorve calor",
      "Rea√ß√£o que envolve transfer√™ncia de el√©trons",
      "Rea√ß√£o que forma precipitados",
    ],
    correctAnswer: 2,
    difficulty: "hard",
    subject: "quimica",
  },

  // Biologia
  {
    id: 19,
    question: "Qual √© a fun√ß√£o principal da mitoc√¥ndria?",
    options: [
      "Digest√£o celular",
      "Produ√ß√£o de energia (ATP)",
      "S√≠ntese de prote√≠nas",
      "Armazenamento de informa√ß√£o gen√©tica",
    ],
    correctAnswer: 1,
    difficulty: "easy",
    subject: "biologia",
  },
  {
    id: 20,
    question: "O que √© a meiose?",
    options: [
      "Divis√£o celular que forma c√©lulas som√°ticas",
      "Divis√£o celular que forma gametas",
      "Processo de s√≠ntese de prote√≠nas",
      "Processo de digest√£o celular",
    ],
    correctAnswer: 1,
    difficulty: "medium",
    subject: "biologia",
  },
  {
    id: 21,
    question: "O que √© epigen√©tica?",
    options: [
      "Estudo dos f√≥sseis",
      "Estudo das muta√ß√µes gen√©ticas",
      "Estudo das altera√ß√µes na express√£o g√™nica sem altera√ß√£o na sequ√™ncia de DNA",
      "Estudo da evolu√ß√£o das esp√©cies",
    ],
    correctAnswer: 2,
    difficulty: "hard",
    subject: "biologia",
  },

  // Filosofia
  {
    id: 22,
    question: "Quem foi S√≥crates?",
    options: ["Um fil√≥sofo romano", "Um fil√≥sofo grego", "Um imperador grego", "Um matem√°tico eg√≠pcio"],
    correctAnswer: 1,
    difficulty: "easy",
    subject: "filosofia",
  },
  {
    id: 23,
    question: "O que √© o 'Mito da Caverna'?",
    options: [
      "Uma hist√≥ria mitol√≥gica grega",
      "Uma alegoria de Plat√£o sobre conhecimento e realidade",
      "Um ritual religioso antigo",
      "Uma descoberta arqueol√≥gica",
    ],
    correctAnswer: 1,
    difficulty: "medium",
    subject: "filosofia",
  },
  {
    id: 24,
    question: "O que √© o imperativo categ√≥rico de Kant?",
    options: ["Um princ√≠pio pol√≠tico", "Um princ√≠pio moral universal", "Uma lei cient√≠fica", "Um m√©todo matem√°tico"],
    correctAnswer: 1,
    difficulty: "hard",
    subject: "filosofia",
  },

  // Sociologia
  {
    id: 25,
    question: "Quem √© considerado o pai da Sociologia?",
    options: ["Karl Marx", "Max Weber", "Auguste Comte", "√âmile Durkheim"],
    correctAnswer: 2,
    difficulty: "easy",
    subject: "sociologia",
  },
  {
    id: 26,
    question: "O que √© estratifica√ß√£o social?",
    options: [
      "Divis√£o da sociedade em camadas hier√°rquicas",
      "Processo de urbaniza√ß√£o",
      "Forma√ß√£o de grupos √©tnicos",
      "Sistema pol√≠tico democr√°tico",
    ],
    correctAnswer: 0,
    difficulty: "medium",
    subject: "sociologia",
  },
  {
    id: 27,
    question: "O que Marx entende por 'aliena√ß√£o'?",
    options: [
      "Distanciamento entre classes sociais",
      "Separa√ß√£o do trabalhador do produto de seu trabalho",
      "Isolamento social volunt√°rio",
      "Processo de migra√ß√£o internacional",
    ],
    correctAnswer: 1,
    difficulty: "hard",
    subject: "sociologia",
  },

  // Ingl√™s
  {
    id: 28,
    question: "Como se diz 'Bom dia' em ingl√™s?",
    options: ["Good afternoon", "Good evening", "Good morning", "Good night"],
    correctAnswer: 2,
    difficulty: "easy",
    subject: "ingles",
  },
  {
    id: 29,
    question: "Qual √© o past simple do verbo 'to go'?",
    options: ["goed", "went", "gone", "going"],
    correctAnswer: 1,
    difficulty: "medium",
    subject: "ingles",
  },
  {
    id: 30,
    question: "O que significa a express√£o idiom√°tica 'to hit the nail on the head'?",
    options: [
      "Machucar-se acidentalmente",
      "Acertar precisamente",
      "Trabalhar na constru√ß√£o civil",
      "Ter uma ideia repentina",
    ],
    correctAnswer: 1,
    difficulty: "hard",
    subject: "ingles",
  },

  // Educa√ß√£o F√≠sica
  {
    id: 31,
    question: "Qual esporte utiliza uma raquete e uma peteca?",
    options: ["T√™nis", "Badminton", "Squash", "Ping-pong"],
    correctAnswer: 1,
    difficulty: "easy",
    subject: "educacao_fisica",
  },
  {
    id: 32,
    question: "O que √© frequ√™ncia card√≠aca?",
    options: [
      "A quantidade de sangue bombeada pelo cora√ß√£o",
      "O n√∫mero de batimentos card√≠acos por minuto",
      "A press√£o do sangue nas art√©rias",
      "O volume de oxig√™nio consumido durante o exerc√≠cio",
    ],
    correctAnswer: 1,
    difficulty: "medium",
    subject: "educacao_fisica",
  },
  {
    id: 33,
    question: "O que √© periodiza√ß√£o no treinamento esportivo?",
    options: [
      "Divis√£o do ano em temporadas competitivas",
      "Organiza√ß√£o sistem√°tica do treinamento em fases para otimizar o desempenho",
      "Intervalo entre s√©ries de exerc√≠cios",
      "Tempo de recupera√ß√£o ap√≥s les√µes",
    ],
    correctAnswer: 1,
    difficulty: "hard",
    subject: "educacao_fisica",
  },

  // Artes
  {
    id: 34,
    question: "Quem pintou a 'Mona Lisa'?",
    options: ["Vincent van Gogh", "Leonardo da Vinci", "Pablo Picasso", "Michelangelo"],
    correctAnswer: 1,
    difficulty: "easy",
    subject: "artes",
  },
  {
    id: 35,
    question: "Qual movimento art√≠stico tem Salvador Dal√≠ como um de seus principais representantes?",
    options: ["Cubismo", "Impressionismo", "Surrealismo", "Expressionismo"],
    correctAnswer: 2,
    difficulty: "medium",
    subject: "artes",
  },
  {
    id: 36,
    question: "O que caracteriza a arte barroca?",
    options: [
      "Simplicidade e equil√≠brio",
      "Dramaticidade, contraste e movimento",
      "Geometriza√ß√£o e abstra√ß√£o das formas",
      "Representa√ß√£o fiel da natureza",
    ],
    correctAnswer: 1,
    difficulty: "hard",
    subject: "artes",
  },
]

// Defini√ß√£o dos n√≠veis com crit√©rios mais justos
const levelDefinitions = [
  { min: 0, max: 30, level: "Iniciante", color: "text-danger", description: "Conhecimentos b√°sicos iniciais" },
  { min: 31, max: 50, level: "B√°sico", color: "text-warning", description: "Fundamentos estabelecidos" },
  {
    min: 51,
    max: 65,
    level: "Intermedi√°rio Inicial",
    color: "text-info",
    description: "Conhecimento em desenvolvimento",
  },
  {
    min: 66,
    max: 75,
    level: "Intermedi√°rio",
    color: "text-primary",
    description: "Bom dom√≠nio dos conceitos principais",
  },
  {
    min: 76,
    max: 85,
    level: "Intermedi√°rio Avan√ßado",
    color: "text-secondary",
    description: "Conhecimento s√≥lido e abrangente",
  },
  { min: 86, max: 95, level: "Avan√ßado", color: "text-dark", description: "Dom√≠nio amplo e profundo" },
  {
    min: 96,
    max: 100,
    level: "Especialista",
    color: "text-success",
    description: "Excel√™ncia e maestria nos conte√∫dos",
  },
]

export default function Disciplina() {
  const [currentQuestion, setCurrentQuestion] = useState(0)
  const [selectedAnswers, setSelectedAnswers] = useState(Array(questions.length).fill(undefined))
  const [showResults, setShowResults] = useState(false)
  const [testStarted, setTestStarted] = useState(false)
  const [activeTab, setActiveTab] = useState("geral")

  const handleAnswerSelect = (answerIndex) => {
    const newAnswers = [...selectedAnswers]
    newAnswers[currentQuestion] = answerIndex
    setSelectedAnswers(newAnswers)
  }

  const handleNext = () => {
    if (currentQuestion < questions.length - 1) {
      setCurrentQuestion(currentQuestion + 1)
    } else {
      setShowResults(true)
    }
  }

  const handlePrevious = () => {
    if (currentQuestion > 0) {
      setCurrentQuestion(currentQuestion - 1)
    }
  }

  const calculateScoreBySubject = () => {
    const subjectScores = {}

    // Inicializar contadores para cada mat√©ria
    Object.keys(subjectInfo).forEach((subject) => {
      subjectScores[subject] = { correct: 0, total: 0, questions: [] }
    })

    // Calcular pontua√ß√µes por mat√©ria
    questions.forEach((question, index) => {
      const subject = question.subject
      subjectScores[subject].total++
      subjectScores[subject].questions.push(question)

      if (selectedAnswers[index] === question.correctAnswer) {
        subjectScores[subject].correct++
      }
    })

    return subjectScores
  }

  const getLevel = (percentage) => {
    const level = levelDefinitions.find((def) => percentage >= def.min && percentage <= def.max)
    return level || levelDefinitions[0]
  }

  const calculateOverallScore = () => {
    let score = 0
    let answered = 0

    questions.forEach((_, index) => {
      if (selectedAnswers[index] !== undefined) {
        answered++
        if (selectedAnswers[index] === questions[index].correctAnswer) {
          score++
        }
      }
    })

    return { score, answered }
  }

  const resetTest = () => {
    setCurrentQuestion(0)
    setSelectedAnswers(Array(questions.length).fill(undefined))
    setShowResults(false)
    setTestStarted(false)
    setActiveTab("geral")
  }

  const progress = ((currentQuestion + 1) / questions.length) * 100

  // Agrupar quest√µes por mat√©ria para a tela inicial
  const subjectQuestionCounts = Object.keys(subjectInfo).reduce((acc, subject) => {
    acc[subject] = questions.filter((q) => q.subject === subject).length
    return acc
  }, {})

  if (!testStarted) {
    return (
      <div className="min-vh-100 bg-light d-flex align-items-center justify-content-center p-4">
        <div className="card shadow-lg" style={{ maxWidth: "800px", width: "100%" }}>
          <div className="card-header text-center bg-primary text-white">
            <div className="mb-3">
              <span className="display-4">üèÜ</span>
            </div>
            <h1 className="card-title h2 mb-2">Teste de N√≠vel - Ensino M√©dio</h1>
            <p className="mb-0">Avalie seus conhecimentos em todas as mat√©rias do Ensino M√©dio</p>
          </div>
          <div className="card-body">
            <div className="alert alert-info mb-4">
              <h5 className="alert-heading">Instru√ß√µes:</h5>
              <ul className="mb-0 small">
                <li>O teste cont√©m {questions.length} quest√µes de 12 mat√©rias diferentes</li>
                <li>Cada quest√£o tem apenas uma resposta correta</li>
                <li>Voc√™ pode navegar entre as quest√µes</li>
                <li>Ao final, voc√™ receber√° seu n√≠vel geral e por mat√©ria</li>
                <li>
                  Os n√≠veis s√£o: Iniciante, B√°sico, Intermedi√°rio Inicial, Intermedi√°rio, Intermedi√°rio Avan√ßado,
                  Avan√ßado e Especialista
                </li>
              </ul>
            </div>

            <div className="row g-3 mb-4">
              {Object.entries(subjectInfo).map(([key, info]) => {
                const count = subjectQuestionCounts[key] || 0
                return (
                  <div key={key} className="col-6 col-md-4 col-lg-3">
                    <div className="card h-100 text-center border-2">
                      <div className="card-body p-3">
                        <div className="fs-3 mb-2">{info.icon}</div>
                        <h6 className="card-title small mb-1">{info.name}</h6>
                        <small className="text-muted">{count} quest√µes</small>
                      </div>
                    </div>
                  </div>
                )
              })}
            </div>

            <div className="alert alert-warning">
              <h6 className="alert-heading">Sistema de N√≠veis:</h6>
              <div className="row">
                {levelDefinitions.map((level) => (
                  <div key={level.level} className="col-md-6 mb-1">
                    <small>
                      <span className={`fw-bold ${level.color}`}>‚óè</span> {level.level} ({level.min}-{level.max}%)
                    </small>
                  </div>
                ))}
              </div>
            </div>

            <button onClick={() => setTestStarted(true)} className="btn btn-primary btn-lg w-100">
              Iniciar Teste
            </button>
          </div>
        </div>
      </div>
    )
  }

  if (showResults) {
    const subjectScores = calculateScoreBySubject()
    const { score, answered } = calculateOverallScore()
    const percentage = answered > 0 ? Math.round((score / answered) * 100) : 0
    const { level, color, description } = getLevel(percentage)

    return (
      <div className="min-vh-100 bg-light d-flex align-items-center justify-content-center p-4">
        <div className="card shadow-lg" style={{ maxWidth: "900px", width: "100%" }}>
          <div className="card-header text-center bg-success text-white">
            <div className="mb-3">
              <span className="display-4">üèÜ</span>
            </div>
            <h1 className="card-title h2">Resultado do Teste</h1>
          </div>
          <div className="card-body">
            {/* Resultado Geral */}
            <div className="text-center bg-primary bg-opacity-10 p-4 rounded mb-4">
              <div className="display-1 fw-bold text-primary mb-2">{percentage}%</div>
              <div className={`h3 fw-bold ${color} mb-2`}>N√≠vel Geral: {level}</div>
              <p className="text-muted">{description}</p>
              <div className="h5 text-dark">
                <span className="fw-bold">{score}</span> de {answered} quest√µes corretas
              </div>
            </div>

            {/* Tabs para resultados por mat√©ria */}
            <ul className="nav nav-tabs mb-3">
              <li className="nav-item">
                <button
                  className={`nav-link ${activeTab === "geral" ? "active" : ""}`}
                  onClick={() => setActiveTab("geral")}
                >
                  Desempenho por Mat√©ria
                </button>
              </li>
              <li className="nav-item">
                <button
                  className={`nav-link ${activeTab === "detalhes" ? "active" : ""}`}
                  onClick={() => setActiveTab("detalhes")}
                >
                  Revis√£o Detalhada
                </button>
              </li>
            </ul>

            {activeTab === "geral" && (
              <div className="row g-3 mb-4">
                {Object.entries(subjectScores).map(([subjectKey, score]) => {
                  const subjectData = subjectInfo[subjectKey]
                  const subjectPercentage = score.total > 0 ? Math.round((score.correct / score.total) * 100) : 0
                  const subjectLevel = getLevel(subjectPercentage)

                  return (
                    <div key={subjectKey} className="col-md-6">
                      <div className="card h-100">
                        <div className={`card-header bg-${subjectData.color} text-white p-2`}>
                          <div className="d-flex align-items-center">
                            <span className="me-2">{subjectData.icon}</span>
                            <div>
                              <h6 className="mb-0">{subjectData.name}</h6>
                              <small className="opacity-75">{subjectData.description}</small>
                            </div>
                          </div>
                        </div>
                        <div className="card-body">
                          <div className="d-flex justify-content-between align-items-center mb-2">
                            <span className="h4 fw-bold">{subjectPercentage}%</span>
                            <span className={`badge ${subjectLevel.color.replace("text-", "bg-")}`}>
                              {subjectLevel.level}
                            </span>
                          </div>
                          <div className="progress mb-2" style={{ height: "8px" }}>
                            <div className="progress-bar" style={{ width: `${subjectPercentage}%` }}></div>
                          </div>
                          <div className="d-flex justify-content-between">
                            <small className="text-muted">
                              {score.correct}/{score.total} corretas
                            </small>
                            <button onClick={() => setActiveTab("detalhes")} className="btn btn-link btn-sm p-0">
                              Ver detalhes
                            </button>
                          </div>
                        </div>
                      </div>
                    </div>
                  )
                })}
              </div>
            )}

            {activeTab === "detalhes" && (
              <div className="mb-4" style={{ maxHeight: "500px", overflowY: "auto" }}>
                {Object.entries(subjectScores).map(([subjectKey, score]) => {
                  const subjectData = subjectInfo[subjectKey]
                  const subjectPercentage = score.total > 0 ? Math.round((score.correct / score.total) * 100) : 0
                  const subjectLevel = getLevel(subjectPercentage)

                  return (
                    <div key={subjectKey} className="card mb-3">
                      <div className="card-header">
                        <div className="d-flex align-items-center justify-content-between">
                          <div className="d-flex align-items-center">
                            <span className="me-2">{subjectData.icon}</span>
                            <h6 className="mb-0">{subjectData.name}</h6>
                          </div>
                          <span className={`badge ${subjectLevel.color.replace("text-", "bg-")}`}>
                            {subjectLevel.level} ({subjectPercentage}%)
                          </span>
                        </div>
                      </div>
                      <div className="card-body">
                        {score.questions.map((question) => {
                          const questionIndex = questions.findIndex((q) => q.id === question.id)
                          const userAnswer = selectedAnswers[questionIndex]
                          const isCorrect = userAnswer === question.correctAnswer
                          const difficultyColors = {
                            easy: "success",
                            medium: "warning",
                            hard: "danger",
                          }

                          return (
                            <div key={question.id} className="d-flex align-items-start mb-3 p-2 bg-light rounded">
                              <div className="me-3 mt-1">
                                {isCorrect ? (
                                  <span className="text-success">‚úì</span>
                                ) : (
                                  <span className="text-danger">‚úó</span>
                                )}
                              </div>
                              <div className="flex-grow-1">
                                <div className="d-flex justify-content-between">
                                  <p className="mb-1 fw-medium">{question.question}</p>
                                  <span className={`badge bg-${difficultyColors[question.difficulty]} ms-2`}>
                                    {question.difficulty === "easy"
                                      ? "F√°cil"
                                      : question.difficulty === "medium"
                                        ? "M√©dio"
                                        : "Dif√≠cil"}
                                  </span>
                                </div>
                                <p className="mb-1 small text-success">
                                  Resposta correta: {question.options[question.correctAnswer]}
                                </p>
                                {!isCorrect && userAnswer !== undefined && (
                                  <p className="mb-0 small text-danger">Sua resposta: {question.options[userAnswer]}</p>
                                )}
                              </div>
                            </div>
                          )
                        })}
                      </div>
                    </div>
                  )
                })}
              </div>
            )}

            <button onClick={resetTest} className="btn btn-primary btn-lg w-100">
              üîÑ Fazer Teste Novamente
            </button>
          </div>
        </div>
      </div>
    )
  }

  const question = questions[currentQuestion]
  const subjectData = subjectInfo[question.subject]

  const difficultyColors = {
    easy: "success",
    medium: "warning",
    hard: "danger",
  }

  const answeredCount = selectedAnswers.filter((a) => a !== undefined).length

  return (
    <div className="min-vh-100 bg-light d-flex align-items-center justify-content-center p-4">
      <div className="card shadow-lg" style={{ maxWidth: "700px", width: "100%" }}>
        <div className="card-header">
          <div className="d-flex justify-content-between align-items-center mb-3">
            <small className="text-muted">
              Quest√£o {currentQuestion + 1} de {questions.length}
            </small>
            <div className="d-flex align-items-center gap-2">
              <span className={`badge bg-${subjectData.color} d-flex align-items-center`}>
                <span className="me-1">{subjectData.icon}</span>
                {subjectData.name}
              </span>
              <span className={`badge bg-${difficultyColors[question.difficulty]}`}>
                {question.difficulty === "easy" ? "F√°cil" : question.difficulty === "medium" ? "M√©dio" : "Dif√≠cil"}
              </span>
            </div>
          </div>
          <div className="progress mb-3" style={{ height: "8px" }}>
            <div className="progress-bar" style={{ width: `${progress}%` }}></div>
          </div>
          <h5 className="card-title">{question.question}</h5>
        </div>
        <div className="card-body">
          <div className="d-grid gap-3 mb-4">
            {question.options.map((option, index) => (
              <button
                key={index}
                onClick={() => handleAnswerSelect(index)}
                className={`btn text-start p-3 ${
                  selectedAnswers[currentQuestion] === index ? "btn-primary" : "btn-outline-secondary"
                }`}
              >
                <div className="d-flex align-items-center">
                  <div
                    className={`me-3 rounded-circle border d-flex align-items-center justify-content-center ${
                      selectedAnswers[currentQuestion] === index
                        ? "bg-white text-primary border-white"
                        : "border-secondary"
                    }`}
                    style={{ width: "24px", height: "24px" }}
                  >
                    {selectedAnswers[currentQuestion] === index && (
                      <div className="bg-primary rounded-circle" style={{ width: "8px", height: "8px" }}></div>
                    )}
                  </div>
                  <span>{option}</span>
                </div>
              </button>
            ))}
          </div>

          <div className="d-flex justify-content-between align-items-center">
            <button className="btn btn-outline-secondary" onClick={handlePrevious} disabled={currentQuestion === 0}>
              Anterior
            </button>
            <small className="text-muted">
              {answeredCount}/{questions.length} respondidas
            </small>
            <button
              className="btn btn-primary"
              onClick={handleNext}
              disabled={selectedAnswers[currentQuestion] === undefined}
            >
              {currentQuestion === questions.length - 1 ? "Finalizar" : "Pr√≥xima"}
            </button>
          </div>
        </div>
      </div>
    </div>
  )
}
